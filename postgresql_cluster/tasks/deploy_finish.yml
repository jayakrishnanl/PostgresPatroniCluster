---

- block:
    - name: PostgreSQL Cluster health
      become: yes
      become_user: postgres
      command: /usr/local/bin/patronictl -c /etc/patroni/patroni.yml list
      register: patronictl_result
    - debug:
        var: patronictl_result.stdout_lines
  when: is_master == "true"
  ignore_errors: yes
  tags: patroni_status

- block:
    - name: PostgreSQL list of databases
      become: yes
      become_user: postgres
      command: "{{ postgresql_bin_dir }}/psql -p {{ postgresql_port }} -c \"SELECT d.datname as Name, pg_catalog.pg_get_userbyid(d.datdba) as Owner, pg_catalog.pg_encoding_to_char(d.encoding) as Encoding, d.datcollate as Collate, d.datctype as Ctype, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_size_pretty(pg_catalog.pg_database_size(d.datname)) ELSE 'No Access' END as Size, t.spcname as Tablespace FROM pg_catalog.pg_database d JOIN pg_catalog.pg_tablespace t on d.dattablespace = t.oid WHERE not datistemplate ORDER BY 1\""
      register: dbs_result
    - debug:
        var: dbs_result.stdout_lines
  when: is_master == "true"
  ignore_errors: yes
  tags: [ databases, db_list ]

- block:
    - name: PostgreSQL Cluster connection info
      debug:
        msg:
          - +------------------------------------------------+
          - address (VIP) {{ cluster_vip }}
          - port 5000 (read/write) master
          - port 5001 (read only)  all replicas
          - port 5002 (read only)  synchronous replica only
          - port 5003 (read only)  asynchronous replicas only
          - +------------------------------------------------+
  when: with_haproxy_load_balancing == "true" and synchronous_mode == "true" and is_master == "true"
  ignore_errors: yes
  tags: conn_info

- block:
    - name: PostgreSQL Cluster connection info
      debug:
        msg:
          - +------------------------------------------------+
          - address (VIP) {{ cluster_vip }}
          - port 5000 (read/write) master
          - port 5001 (read only)  all replicas
          - +------------------------------------------------+
  when: with_haproxy_load_balancing == "true" and synchronous_mode != "true" and is_master == "true"
  ignore_errors: yes
  tags: conn_info

- block:
    - name: PostgreSQL Cluster connection info
      debug:
        msg:
          - +------------------------------------------------+
          - address (VIP) {{ cluster_vip }}
          - port {{ pgbouncer_listen_port }} (pgbouncer)
          - +------------------------------------------------+
  when: with_haproxy_load_balancing == "false" and install_pgbouncer == "true" and is_master == "true"
  ignore_errors: yes
  tags: conn_info

- block:
    - name: PostgreSQL Cluster connection info
      debug:
        msg:
          - +------------------------------------------------+
          - address (VIP) {{ cluster_vip }}
          - port {{ postgresql_port }}
          - +------------------------------------------------+
  when: with_haproxy_load_balancing == "false" and install_pgbouncer != "true" and is_master == "true"
  ignore_errors: yes
  tags: conn_info

- block:
    - name: Virtual IP Address (VIP) info
      set_fact:
        man_ip: "{{ item }}"
      loop: "{{ ansible_all_ipv4_addresses }}"
      when: item == cluster_vip
    - debug:
        msg: Cluster ip address (VIP) {{ cluster_vip }} is running on server "{{ ansible_hostname }}"
      when: man_ip is defined and man_ip == cluster_vip
  tags: [ vip_owner, vip_status ]
