---

# Configure SSH Key-Based Authentication
- name: ssh-keys | check user "{{ ssh_key_user }}" | create user if not already exist
  user:
    name: "{{ ssh_key_user }}"
    shell: /bin/bash
    state: present

- name: ssh-keys | create a 2048-bit SSH key for user "{{ ssh_key_user }}" in ~/.ssh/id_rsa (if not already exist)
  user:
    name: "{{ ssh_key_user }}"
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa

- name: ssh-keys | fetch key files from remote servers to ansible server
  fetch:
    src: "~{{ ssh_key_user }}/.ssh/id_rsa.pub"
    dest: "files/{{ ansible_hostname }}-id_rsa.pub"
    flat: yes
  changed_when: false

- name: ssh-keys | copy key files and add to authorized_keys
  authorized_key:
    user: "{{ ssh_key_user }}"
    state: "{{ ssh_key_state }}"
    key: "{{ lookup('pipe','cat files/*id_rsa.pub') }}"
    exclusive: no

# known_hosts
- name: known_hosts | for each host, scan for its ssh public key
  shell: "ssh-keyscan -trsa -p {{ ansible_ssh_port }} {{ item }}"
  loop: "{{ ssh_known_hosts }}"
  register: ssh_known_host_results
  changed_when: false

- name: known_hosts | for each host, add/update the public key in the "~{{ ssh_key_user }}/.ssh/known_hosts"
  become: yes
  become_user: "{{ ssh_key_user }}"
  known_hosts:
    name: "{{ item.item }}"
    key: "{{ item.stdout }}"
    path: "~{{ ssh_key_user }}/.ssh/known_hosts"
  no_log: True
  loop: "{{ ssh_known_host_results.results }}"
